{"ast":null,"code":"import Web3 from 'web3';\nimport { useWallet } from 'use-wallet';\nexport function UseContractsFn(val) {\n  const {\n    ethereum\n  } = useWallet();\n  const web3 = new Web3(ethereum);\n\n  const erc20ABI = require('../assets/abi/ERC20ABI.json');\n\n  const addresses = {\n    'ERC20': {\n      1: '0xd9bE442ACe8665C6046B1D365BF1C20a2D75Fd0f',\n      3: '',\n      42: ''\n    }\n  };\n\n  const getAddress = val => {\n    return addresses[val];\n  };\n\n  const erc20Address = getAddress('ERC20')[1];\n  const erc20Contract = new web3.eth.Contract(erc20ABI, erc20Address);\n  const contracts = {\n    ERC20Contract: {\n      address: erc20Address,\n      contract: erc20Contract,\n      decimals: 18\n    }\n  };\n  return contracts[val];\n}\nexport const getContract = val => {\n  const contractName = val + 'Contract';\n  return contractsFn(contractName);\n};","map":{"version":3,"sources":["C:/xampp/htdocs/LudusApp/src/helpers/contracts.ts"],"names":["Web3","useWallet","UseContractsFn","val","ethereum","web3","erc20ABI","require","addresses","getAddress","erc20Address","erc20Contract","eth","Contract","contracts","ERC20Contract","address","contract","decimals","getContract","contractName","contractsFn"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAO,SAASC,cAAT,CAAwBC,GAAxB,EAAqC;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAuCH,SAAS,EAAtD;AACA,QAAMI,IAAI,GAAG,IAAIL,IAAJ,CAASI,QAAT,CAAb;;AAEA,QAAME,QAAQ,GAAGC,OAAO,CAAC,6BAAD,CAAxB;;AAEA,QAAMC,SAAS,GAAG;AACd,aAAS;AACL,SAAG,4CADE;AAEL,SAAG,EAFE;AAGL,UAAI;AAHC;AADK,GAAlB;;AAQA,QAAMC,UAAU,GAAIN,GAAD,IAAiB;AAChC,WAAOK,SAAS,CAACL,GAAD,CAAhB;AACH,GAFD;;AAIA,QAAMO,YAAY,GAAGD,UAAU,CAAC,OAAD,CAAV,CAAoB,CAApB,CAArB;AACA,QAAME,aAAa,GAAG,IAAIN,IAAI,CAACO,GAAL,CAASC,QAAb,CAAsBP,QAAtB,EAAgCI,YAAhC,CAAtB;AAEA,QAAMI,SAAS,GAAG;AACdC,IAAAA,aAAa,EAAE;AACXC,MAAAA,OAAO,EAAEN,YADE;AAEXO,MAAAA,QAAQ,EAAEN,aAFC;AAGXO,MAAAA,QAAQ,EAAE;AAHC;AADD,GAAlB;AAQA,SAAOJ,SAAS,CAACX,GAAD,CAAhB;AACH;AACD,OAAO,MAAMgB,WAAW,GAAIhB,GAAD,IAAiB;AACxC,QAAMiB,YAAY,GAAGjB,GAAG,GAAG,UAA3B;AACA,SAAOkB,WAAW,CAACD,YAAD,CAAlB;AACH,CAHM","sourcesContent":["import Web3 from 'web3'\r\nimport { provider } from 'web3-core'\r\nimport { useWallet } from 'use-wallet'\r\n\r\nexport function UseContractsFn(val: string) {\r\n    const { ethereum }: { ethereum: provider } = useWallet()\r\n    const web3 = new Web3(ethereum)\r\n\r\n    const erc20ABI = require('../assets/abi/ERC20ABI.json');\r\n\r\n    const addresses = {\r\n        'ERC20': {\r\n            1: '0xd9bE442ACe8665C6046B1D365BF1C20a2D75Fd0f',\r\n            3: '',\r\n            42: ''\r\n        }\r\n    }\r\n\r\n    const getAddress = (val: string) => {\r\n        return addresses[val]\r\n    }\r\n\r\n    const erc20Address = getAddress('ERC20')[1];\r\n    const erc20Contract = new web3.eth.Contract(erc20ABI, erc20Address);\r\n\r\n    const contracts = {\r\n        ERC20Contract: {\r\n            address: erc20Address,\r\n            contract: erc20Contract,\r\n            decimals: 18\r\n        }\r\n    }\r\n\r\n    return contracts[val];\r\n}\r\nexport const getContract = (val: string) => {\r\n    const contractName = val + 'Contract';\r\n    return contractsFn(contractName);\r\n}"]},"metadata":{},"sourceType":"module"}