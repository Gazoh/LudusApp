{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\LudusApp\\\\src\\\\views\\\\Staking\\\\StakingContent.tsx\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../helpers/icon';\nimport { useWallet } from 'use-wallet';\nimport { getContractOf } from '../../utils/erc20';\nimport { sendTransaction } from '../../utils/utils';\nimport { toast } from 'react-toastify';\nimport NFTStakingABI from '../../assets/abi/NFTStakingABI.json';\nimport RaribleABI from '../../assets/abi/RaribleABI.json';\nimport LPStakingABI from '../../assets/abi/LPStakingABI.json';\nimport LudusABI from '../../assets/abi/LudusABI.json';\nimport LudusStakingABI from '../../assets/abi/LudusStakingABI.json';\nimport LudusGenesis001 from '../../assets/img/ludusGenesis001.png';\nimport LudusGenesis002 from '../../assets/img/ludusGenesis002.png';\nimport LudusGenesis003 from '../../assets/img/ludusGenesis003.png';\nimport CustomButton from '../../components/CustomButton/CustomButton';\n\nconst StakingContent = () => {\n  const {\n    account,\n    ethereum\n  } = useWallet(); // Main Net\n\n  const LudusStakingContractAddress = '0x055c2E794c6e1308B7a1B4c7b80aAf5Ed757c2F6';\n  const LudusContractAddress = '0x03fDcAdc09559262F40F5EA61C720278264eB1da';\n  const LPStakingContractAddress = '0x9494b87a5bc8D7Be31f88821E5081Dc5aB029EB2';\n  const NFTStakingContractAddress = '0x420Ccf524D8b6Ad1144Ea48df212559a836A5261';\n  const RaribleTokenContractAddress = '0xd07dc4262BCDbf85190C01c996b4C06a461d2430'; // Kovan\n  // const LudusStakingContractAddress = '0x055c2E794c6e1308B7a1B4c7b80aAf5Ed757c2F6'\n  // const LudusContractAddress = '0x03fDcAdc09559262F40F5EA61C720278264eB1da'\n  // const LPStakingContractAddress = '0x9494b87a5bc8D7Be31f88821E5081Dc5aB029EB2'\n  // const NFTStakingContractAddress = '0x420Ccf524D8b6Ad1144Ea48df212559a836A5261'\n\n  const LudusStakingContract = useMemo(() => {\n    return getContractOf(LudusStakingABI, ethereum, LudusStakingContractAddress);\n  }, [account]);\n  const LudusContract = useMemo(() => {\n    return getContractOf(LudusABI, ethereum, LudusContractAddress);\n  }, [account]);\n  const LPStakingContract = useMemo(() => {\n    return getContractOf(LPStakingABI, ethereum, LPStakingContractAddress);\n  }, [account]);\n  const NFTStakingContract = useMemo(() => {\n    return getContractOf(NFTStakingABI, ethereum, NFTStakingContractAddress);\n  }, [account]);\n  const RaribleContract = useMemo(() => {\n    return getContractOf(RaribleABI, ethereum, RaribleTokenContractAddress);\n  }, [account]);\n  const ludusGenesis001ID = 181087;\n  const ludusGenesis002ID = 181123;\n  const ludusGenesis003ID = 181077;\n  const [ludusGenesis001, setLudusGenesis001] = useState(0);\n  const [ludusGenesis002, setLudusGenesis002] = useState(0);\n  const [ludusGenesis003, setLudusGenesis003] = useState(0);\n  const [ludusBalance, setLudusBalance] = useState(0);\n  const [lpBalance, setLpBalance] = useState(0);\n  let toastOptionsError = {\n    type: 'error'\n  };\n  let toastOptionsSuccess = {\n    type: 'success'\n  };\n  useEffect(() => {\n    // setting Ludus & LP Balance\n    if (account !== null) {\n      const balLudus = LudusContract.methods.balanceOf(account).call();\n      balLudus.then(b => setLudusBalance(b));\n      const balLP = LPStakingContract.methods.balanceOf(account).call();\n      balLP.then(b => setLpBalance(b));\n    }\n  }, [account, ludusGenesis001, ludusGenesis002, ludusGenesis003]);\n  /* \r\n  * @returns Approves NFT Staking\r\n  */\n\n  const approveNFTStaking = async () => {\n    const encodedABI = RaribleContract.methods.setApprovalForAll(NFTStakingContractAddress, true).encodeABI();\n    await sendTransaction(ethereum, account, RaribleTokenContractAddress, encodedABI, '0x0', err => {\n      // onError\n      if (err.code === 4001) {\n        toast('Cancelled approve for NFT', toastOptionsError);\n      } else {\n        toast(err.message, toastOptionsError);\n      }\n    }, () => {\n      // onSuccess\n      toast('Approve succeeded for NFT', toastOptionsSuccess);\n    });\n  };\n  /* \r\n  * @returns Stakes your NFT amount\r\n  */\n\n\n  const stakeNFT = () => {\n    if (ludusGenesis001 > 0) {\n      const encodedABI = NFTStakingContract.methods.stake(ludusGenesis001ID, ludusGenesis001).encodeABI();\n      sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI, '0x0', err => {\n        // onError\n        if (err.code === 4001) {\n          toast('Cancelled stake for NFT', toastOptionsError);\n        } else {\n          toast(err.message, toastOptionsError);\n        }\n      }, () => {\n        // onSuccess\n        toast('Stake succeeded for NFT', toastOptionsSuccess);\n      });\n    }\n\n    if (ludusGenesis002 > 0) {\n      const encodedABI = NFTStakingContract.methods.stake(ludusGenesis002ID, ludusGenesis002).encodeABI();\n      sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI, '0x0', err => {\n        // onError\n        if (err.code === 4001) {\n          toast('Cancelled stake for NFT', toastOptionsError);\n        } else {\n          toast(err.message, toastOptionsError);\n        }\n      }, () => {\n        // onSuccess\n        toast('Stake succeeded for NFT', toastOptionsSuccess);\n      });\n    }\n\n    if (ludusGenesis003 > 0) {\n      const encodedABI = NFTStakingContract.methods.stake(ludusGenesis003ID, ludusGenesis003).encodeABI();\n      sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI, '0x0', err => {\n        // onError\n        if (err.code === 4001) {\n          toast('Cancelled stake', toastOptionsError);\n        } else {\n          toast(err.message, toastOptionsError);\n        }\n      }, () => {\n        // onSuccess\n        toast('Stake succeeded', toastOptionsSuccess);\n      });\n    }\n  };\n  /* \r\n  * @returns Claims NFT\r\n  */\n\n\n  const claimNFT = () => {\n    const encodedABI = NFTStakingContract.methods.claim().encodeABI();\n    sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI, '0x0', err => {\n      // onError\n      if (err.code === 4001) {\n        toast('Cancelled claim for NFT', toastOptionsError);\n      } else {\n        toast(err.message, toastOptionsError);\n      }\n    }, () => {\n      // onSuccess\n      toast('Claim succeeded for NFT', toastOptionsSuccess);\n    });\n  };\n  /* \r\n  * @returns Unstakes all the NFT's\r\n  * @TODO Check current stakes and send transactions to those one's and not to all NFT's\r\n  */\n\n\n  const unstakeNFT = () => {\n    const encodedABI1 = NFTStakingContract.methods.exit(ludusGenesis001ID).encodeABI();\n    const encodedABI2 = NFTStakingContract.methods.exit(ludusGenesis002ID).encodeABI();\n    const encodedABI3 = NFTStakingContract.methods.exit(ludusGenesis003ID).encodeABI();\n    sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI1, '0x0', err => {\n      // onError\n      if (err.code === 4001) {\n        toast('Cancelled unstaking for NFT', toastOptionsError);\n      } else {\n        toast(err.message, toastOptionsError);\n      }\n    }, () => {\n      // onSuccess\n      toast('Unstaking succeeded for NFT', toastOptionsSuccess);\n    });\n    sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI2, '0x0', err => {\n      // onError\n      if (err.code === 4001) {\n        toast('Cancelled unstaking for NFT', toastOptionsError);\n      } else {\n        toast(err.message, toastOptionsError);\n      }\n    }, () => {\n      // onSuccess\n      toast('Unstaking succeeded for NFT', toastOptionsSuccess);\n    });\n    sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI3, '0x0', err => {\n      // onError\n      if (err.code === 4001) {\n        toast('Cancelled unstaking for NFT', toastOptionsError);\n      } else {\n        toast(err.message, toastOptionsError);\n      }\n    }, () => {\n      // onSuccess\n      toast('Unstaking succeeded for NFT', toastOptionsSuccess);\n    });\n  }; // Single Asset Staking\n\n\n  const approveSingleAsset = async () => {\n    // TODO approve amount must be a input for user \n    const encodedABI = LudusContract.methods.approve(account, 10000000000).encodeABI();\n    const hx = await sendTransaction(ethereum, account, LudusContractAddress, encodedABI);\n    console.log('hx', hx);\n  };\n\n  const stakeSingleAsset = () => {\n    const stake = LudusStakingContract.methods.stake(1).call();\n    stake.then(s => console.log('s', s));\n    console.log('LudusStakingContract', LudusStakingContract);\n  };\n  /* \r\n  * @returns LP Approve\r\n  * @TODO Where do i approve, the LP Staking?\r\n  */\n\n\n  const approveLPStaking = async () => {// // TODO approve amount must be a input for user \n    // const encodedABI = LudusContract.methods.approve(account, 10000000000).encodeABI();\n    // const hx = await sendTransaction(ethereum, account, LudusContractAddress, encodedABI);\n    // console.log('hx', hx)\n  };\n  /* \r\n  * @returns LP Stake\r\n  * @TODO Where do i get the staking amount from?\r\n  */\n\n\n  const stakeLP = async () => {\n    const encodedABI = LPStakingContract.methods.stake(1).encodeABI();\n    await sendTransaction(ethereum, account, LPStakingContractAddress, encodedABI, '0x0', err => {\n      // onError\n      if (err.code === 4001) {\n        toast('Cancelled staking for LP', toastOptionsError);\n      } else {\n        toast(err.message, toastOptionsError);\n      }\n    }, () => {\n      // onSuccess\n      toast('Staking succeeded for LP', toastOptionsSuccess);\n    });\n  };\n  /* \r\n  * @returns LP Claim\r\n  */\n\n\n  const claimLP = async () => {\n    const encodedABI = LPStakingContract.methods.claim().encodeABI();\n    await sendTransaction(ethereum, account, LPStakingContractAddress, encodedABI, '0x0', err => {\n      // onError\n      if (err.code === 4001) {\n        toast('Cancelled claim for LP', toastOptionsError);\n      } else {\n        toast(err.message, toastOptionsError);\n      }\n    }, () => {\n      // onSuccess\n      toast('Claim succeeded for LP', toastOptionsSuccess);\n    });\n  };\n  /* \r\n  * @returns LP Unstake\r\n  */\n\n\n  const unstakeLP = async () => {\n    const encodedABI = LPStakingContract.methods.exit().encodeABI();\n    await sendTransaction(ethereum, account, LPStakingContractAddress, encodedABI, '0x0', err => {\n      // onError\n      if (err.code === 4001) {\n        toast('Cancelled unstaking for LP', toastOptionsError);\n      } else {\n        toast(err.message, toastOptionsError);\n      }\n    }, () => {\n      // onSuccess\n      toast('Unstaking succeeded for LP', toastOptionsSuccess);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"farms-content-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"farms-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, \"NFT Staking\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LudusGenesis001,\n    alt: \"LudusGenesis001\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-row-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, \"Ludus Genesis 001\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `input-selection ${!account ? 'disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"nbdr-btn input-selection-icon left\",\n    onClick: () => ludusGenesis001 === 0 || !account ? null : setLudusGenesis001(ludusGenesis001 - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: icons.minus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 195\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-selection-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  }, ludusGenesis001), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"nbdr-btn input-selection-icon right\",\n    onClick: () => !account ? null : setLudusGenesis001(ludusGenesis001 + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: icons.plus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 171\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LudusGenesis002,\n    alt: \"LudusGenesis002\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-row-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 29\n    }\n  }, \"Ludus Genesis 002\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `input-selection ${!account ? 'disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"nbdr-btn input-selection-icon left\",\n    onClick: () => ludusGenesis002 === 0 || !account ? null : setLudusGenesis002(ludusGenesis002 - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: icons.minus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 195\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-selection-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 33\n    }\n  }, ludusGenesis002), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"nbdr-btn input-selection-icon right\",\n    onClick: () => !account ? null : setLudusGenesis002(ludusGenesis002 + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: icons.plus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 171\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: LudusGenesis003,\n    alt: \"LudusGenesis003\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-row-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, \"Ludus Genesis 003\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: `input-selection ${!account ? 'disabled' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"nbdr-btn input-selection-icon left\",\n    onClick: () => ludusGenesis003 === 0 || !account ? null : setLudusGenesis003(ludusGenesis003 - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: icons.minus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 195\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-selection-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 33\n    }\n  }, ludusGenesis003), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"nbdr-btn input-selection-icon right\",\n    onClick: () => !account ? null : setLudusGenesis003(ludusGenesis003 + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: icons.plus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 171\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-btm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"button\",\n    disabled: !account,\n    onClick: approveNFTStaking,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  }, \"Approve\"), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"b-btn main\",\n    disabled: !account || ludusGenesis001 <= 0 && ludusGenesis002 <= 0 && ludusGenesis003 <= 0,\n    onClick: stakeNFT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, \"Stake\"), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"b-btn main\",\n    disabled: !account,\n    onClick: claimNFT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }, \"Claim\"), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"b-btn main\",\n    disabled: !account,\n    onClick: unstakeNFT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 25\n    }\n  }, \"Unstake\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-wrap-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 25\n    }\n  }, \"Single asset staking\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 29\n    }\n  }, \"Your Ludus balans\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 29\n    }\n  }, ludusBalance)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-btm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"button\",\n    disabled: !account,\n    onClick: approveSingleAsset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 29\n    }\n  }, \"Approve\"), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"b-btn main\",\n    disabled: !account,\n    onClick: stakeSingleAsset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 29\n    }\n  }, \"Stake\"), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"b-btn main\",\n    disabled: !account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 29\n    }\n  }, \"Claim\"), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"b-btn main\",\n    disabled: !account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  }, \"Unstake\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 25\n    }\n  }, \"LP Staking\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, \"Your LP Balans\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 29\n    }\n  }, lpBalance)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content-btm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"button\",\n    disabled: !account,\n    onClick: approveLPStaking,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 29\n    }\n  }, \"Approve\"), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"b-btn main\",\n    disabled: !account,\n    onClick: stakeLP,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 29\n    }\n  }, \"Stake\"), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"b-btn main\",\n    disabled: !account,\n    onClick: claimLP,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  }, \"Claim\"), /*#__PURE__*/React.createElement(CustomButton, {\n    className: \"b-btn main\",\n    disabled: !account,\n    onClick: unstakeLP,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 29\n    }\n  }, \"Unstake\"))))));\n};\n\nexport default StakingContent;","map":{"version":3,"sources":["C:/xampp/htdocs/LudusApp/src/views/Staking/StakingContent.tsx"],"names":["React","useEffect","useMemo","useState","FontAwesomeIcon","icons","useWallet","getContractOf","sendTransaction","toast","NFTStakingABI","RaribleABI","LPStakingABI","LudusABI","LudusStakingABI","LudusGenesis001","LudusGenesis002","LudusGenesis003","CustomButton","StakingContent","account","ethereum","LudusStakingContractAddress","LudusContractAddress","LPStakingContractAddress","NFTStakingContractAddress","RaribleTokenContractAddress","LudusStakingContract","LudusContract","LPStakingContract","NFTStakingContract","RaribleContract","ludusGenesis001ID","ludusGenesis002ID","ludusGenesis003ID","ludusGenesis001","setLudusGenesis001","ludusGenesis002","setLudusGenesis002","ludusGenesis003","setLudusGenesis003","ludusBalance","setLudusBalance","lpBalance","setLpBalance","toastOptionsError","type","toastOptionsSuccess","balLudus","methods","balanceOf","call","then","b","balLP","approveNFTStaking","encodedABI","setApprovalForAll","encodeABI","err","code","message","stakeNFT","stake","claimNFT","claim","unstakeNFT","encodedABI1","exit","encodedABI2","encodedABI3","approveSingleAsset","approve","hx","console","log","stakeSingleAsset","s","approveLPStaking","stakeLP","claimLP","unstakeLP","minus","plus"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../helpers/icon'\r\nimport { useWallet } from 'use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport { getContractOf } from '../../utils/erc20'\r\nimport { sendTransaction } from '../../utils/utils'\r\nimport { toast, ToastOptions } from 'react-toastify';\r\n\r\nimport NFTStakingABI from '../../assets/abi/NFTStakingABI.json';\r\nimport RaribleABI from '../../assets/abi/RaribleABI.json';\r\nimport LPStakingABI from '../../assets/abi/LPStakingABI.json';\r\nimport LudusABI from '../../assets/abi/LudusABI.json';\r\nimport LudusStakingABI from '../../assets/abi/LudusStakingABI.json';\r\n\r\nimport LudusGenesis001 from '../../assets/img/ludusGenesis001.png'\r\nimport LudusGenesis002 from '../../assets/img/ludusGenesis002.png'\r\nimport LudusGenesis003 from '../../assets/img/ludusGenesis003.png'\r\n\r\nimport CustomButton from '../../components/CustomButton/CustomButton'\r\n\r\nconst StakingContent: React.FC = () => {\r\n    const { account, ethereum } = useWallet()\r\n\r\n    // Main Net\r\n    const LudusStakingContractAddress = '0x055c2E794c6e1308B7a1B4c7b80aAf5Ed757c2F6'\r\n    const LudusContractAddress = '0x03fDcAdc09559262F40F5EA61C720278264eB1da'\r\n    const LPStakingContractAddress = '0x9494b87a5bc8D7Be31f88821E5081Dc5aB029EB2'\r\n    const NFTStakingContractAddress = '0x420Ccf524D8b6Ad1144Ea48df212559a836A5261'\r\n    const RaribleTokenContractAddress = '0xd07dc4262BCDbf85190C01c996b4C06a461d2430'\r\n\r\n    // Kovan\r\n    // const LudusStakingContractAddress = '0x055c2E794c6e1308B7a1B4c7b80aAf5Ed757c2F6'\r\n    // const LudusContractAddress = '0x03fDcAdc09559262F40F5EA61C720278264eB1da'\r\n    // const LPStakingContractAddress = '0x9494b87a5bc8D7Be31f88821E5081Dc5aB029EB2'\r\n    // const NFTStakingContractAddress = '0x420Ccf524D8b6Ad1144Ea48df212559a836A5261'\r\n\r\n\r\n    const LudusStakingContract = useMemo(() => { return getContractOf(LudusStakingABI, ethereum as provider, LudusStakingContractAddress) }, [account])\r\n    const LudusContract = useMemo(() => { return getContractOf(LudusABI, ethereum as provider, LudusContractAddress) }, [account])\r\n    const LPStakingContract = useMemo(() => { return getContractOf(LPStakingABI, ethereum as provider, LPStakingContractAddress) }, [account])\r\n    const NFTStakingContract = useMemo(() => { return getContractOf(NFTStakingABI, ethereum as provider, NFTStakingContractAddress) }, [account])\r\n    const RaribleContract = useMemo(() => { return getContractOf(RaribleABI, ethereum as provider, RaribleTokenContractAddress) }, [account])\r\n\r\n    const ludusGenesis001ID = 181087\r\n    const ludusGenesis002ID = 181123\r\n    const ludusGenesis003ID = 181077\r\n\r\n    const [ludusGenesis001, setLudusGenesis001] = useState(0)\r\n    const [ludusGenesis002, setLudusGenesis002] = useState(0)\r\n    const [ludusGenesis003, setLudusGenesis003] = useState(0)\r\n\r\n    const [ludusBalance, setLudusBalance] = useState(0)\r\n    const [lpBalance, setLpBalance] = useState(0)\r\n\r\n    let toastOptionsError: ToastOptions = { type: 'error' }\r\n    let toastOptionsSuccess: ToastOptions = { type: 'success' }\r\n\r\n    useEffect(() => {\r\n        // setting Ludus & LP Balance\r\n        if (account !== null) {\r\n            const balLudus = LudusContract.methods.balanceOf(account).call();\r\n            balLudus.then((b: any) => setLudusBalance(b))\r\n            const balLP = LPStakingContract.methods.balanceOf(account).call();\r\n            balLP.then((b: any) => setLpBalance(b))\r\n\r\n        }\r\n    }, [account, ludusGenesis001, ludusGenesis002, ludusGenesis003])\r\n\r\n    /* \r\n    * @returns Approves NFT Staking\r\n    */\r\n    const approveNFTStaking = async () => {\r\n        const encodedABI = RaribleContract.methods.setApprovalForAll(NFTStakingContractAddress, true).encodeABI();\r\n        await sendTransaction(ethereum, account, RaribleTokenContractAddress, encodedABI, '0x0',\r\n            (err: any) => { // onError\r\n                if (err.code === 4001) {\r\n                    toast('Cancelled approve for NFT', toastOptionsError)\r\n                } else {\r\n                    toast(err.message, toastOptionsError)\r\n                }\r\n            },\r\n            () => { // onSuccess\r\n                toast('Approve succeeded for NFT', toastOptionsSuccess)\r\n            });\r\n    }\r\n\r\n    /* \r\n    * @returns Stakes your NFT amount\r\n    */\r\n    const stakeNFT = () => {\r\n        if (ludusGenesis001 > 0) {\r\n            const encodedABI = NFTStakingContract.methods.stake(ludusGenesis001ID, ludusGenesis001).encodeABI();\r\n            sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI, '0x0',\r\n                (err: any) => { // onError\r\n                    if (err.code === 4001) {\r\n                        toast('Cancelled stake for NFT', toastOptionsError)\r\n                    } else {\r\n                        toast(err.message, toastOptionsError)\r\n                    }\r\n                },\r\n                () => { // onSuccess\r\n                    toast('Stake succeeded for NFT', toastOptionsSuccess)\r\n                });\r\n        }\r\n        if (ludusGenesis002 > 0) {\r\n            const encodedABI = NFTStakingContract.methods.stake(ludusGenesis002ID, ludusGenesis002).encodeABI();\r\n            sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI, '0x0',\r\n                (err: any) => { // onError\r\n                    if (err.code === 4001) {\r\n                        toast('Cancelled stake for NFT', toastOptionsError)\r\n                    } else {\r\n                        toast(err.message, toastOptionsError)\r\n                    }\r\n                },\r\n                () => { // onSuccess\r\n                    toast('Stake succeeded for NFT', toastOptionsSuccess)\r\n                });\r\n        }\r\n        if (ludusGenesis003 > 0) {\r\n            const encodedABI = NFTStakingContract.methods.stake(ludusGenesis003ID, ludusGenesis003).encodeABI();\r\n            sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI, '0x0',\r\n                (err: any) => { // onError\r\n                    if (err.code === 4001) {\r\n                        toast('Cancelled stake', toastOptionsError)\r\n                    } else {\r\n                        toast(err.message, toastOptionsError)\r\n                    }\r\n                },\r\n                () => { // onSuccess\r\n                    toast('Stake succeeded', toastOptionsSuccess)\r\n                });\r\n        }\r\n    }\r\n\r\n    /* \r\n    * @returns Claims NFT\r\n    */\r\n    const claimNFT = () => {\r\n        const encodedABI = NFTStakingContract.methods.claim().encodeABI();\r\n        sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI, '0x0',\r\n            (err: any) => { // onError\r\n                if (err.code === 4001) {\r\n                    toast('Cancelled claim for NFT', toastOptionsError)\r\n                } else {\r\n                    toast(err.message, toastOptionsError)\r\n                }\r\n            },\r\n            () => { // onSuccess\r\n                toast('Claim succeeded for NFT', toastOptionsSuccess)\r\n            });\r\n    }\r\n\r\n    /* \r\n    * @returns Unstakes all the NFT's\r\n    * @TODO Check current stakes and send transactions to those one's and not to all NFT's\r\n    */\r\n    const unstakeNFT = () => {\r\n        const encodedABI1 = NFTStakingContract.methods.exit(ludusGenesis001ID).encodeABI();\r\n        const encodedABI2 = NFTStakingContract.methods.exit(ludusGenesis002ID).encodeABI();\r\n        const encodedABI3 = NFTStakingContract.methods.exit(ludusGenesis003ID).encodeABI();\r\n        sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI1, '0x0',\r\n            (err: any) => { // onError\r\n                if (err.code === 4001) {\r\n                    toast('Cancelled unstaking for NFT', toastOptionsError)\r\n                } else {\r\n                    toast(err.message, toastOptionsError)\r\n                }\r\n            },\r\n            () => { // onSuccess\r\n                toast('Unstaking succeeded for NFT', toastOptionsSuccess)\r\n            });\r\n        sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI2, '0x0',\r\n            (err: any) => { // onError\r\n                if (err.code === 4001) {\r\n                    toast('Cancelled unstaking for NFT', toastOptionsError)\r\n                } else {\r\n                    toast(err.message, toastOptionsError)\r\n                }\r\n            },\r\n            () => { // onSuccess\r\n                toast('Unstaking succeeded for NFT', toastOptionsSuccess)\r\n            });\r\n        sendTransaction(ethereum, account, NFTStakingContractAddress, encodedABI3, '0x0',\r\n            (err: any) => { // onError\r\n                if (err.code === 4001) {\r\n                    toast('Cancelled unstaking for NFT', toastOptionsError)\r\n                } else {\r\n                    toast(err.message, toastOptionsError)\r\n                }\r\n            },\r\n            () => { // onSuccess\r\n                toast('Unstaking succeeded for NFT', toastOptionsSuccess)\r\n            });\r\n    }\r\n\r\n    // Single Asset Staking\r\n\r\n    const approveSingleAsset = async () => {\r\n        // TODO approve amount must be a input for user \r\n        const encodedABI = LudusContract.methods.approve(account, 10000000000).encodeABI();\r\n        const hx = await sendTransaction(ethereum, account, LudusContractAddress, encodedABI);\r\n        console.log('hx', hx)\r\n    }\r\n\r\n    const stakeSingleAsset = () => {\r\n        const stake = LudusStakingContract.methods.stake(1).call();\r\n        stake.then((s: any) => console.log('s', s))\r\n        console.log('LudusStakingContract', LudusStakingContract)\r\n    }\r\n\r\n    /* \r\n    * @returns LP Approve\r\n    * @TODO Where do i approve, the LP Staking?\r\n    */\r\n    const approveLPStaking = async () => {\r\n        // // TODO approve amount must be a input for user \r\n        // const encodedABI = LudusContract.methods.approve(account, 10000000000).encodeABI();\r\n        // const hx = await sendTransaction(ethereum, account, LudusContractAddress, encodedABI);\r\n        // console.log('hx', hx)\r\n    }\r\n\r\n    /* \r\n    * @returns LP Stake\r\n    * @TODO Where do i get the staking amount from?\r\n    */\r\n    const stakeLP = async () => {\r\n        const encodedABI = LPStakingContract.methods.stake(1).encodeABI();\r\n        await sendTransaction(ethereum, account, LPStakingContractAddress, encodedABI, '0x0',\r\n            (err: any) => { // onError\r\n                if (err.code === 4001) {\r\n                    toast('Cancelled staking for LP', toastOptionsError)\r\n                } else {\r\n                    toast(err.message, toastOptionsError)\r\n                }\r\n            },\r\n            () => { // onSuccess\r\n                toast('Staking succeeded for LP', toastOptionsSuccess)\r\n            });\r\n    }\r\n\r\n    /* \r\n    * @returns LP Claim\r\n    */\r\n    const claimLP = async () => {\r\n        const encodedABI = LPStakingContract.methods.claim().encodeABI();\r\n        await sendTransaction(ethereum, account, LPStakingContractAddress, encodedABI, '0x0',\r\n            (err: any) => { // onError\r\n                if (err.code === 4001) {\r\n                    toast('Cancelled claim for LP', toastOptionsError)\r\n                } else {\r\n                    toast(err.message, toastOptionsError)\r\n                }\r\n            },\r\n            () => { // onSuccess\r\n                toast('Claim succeeded for LP', toastOptionsSuccess)\r\n            });\r\n    }\r\n\r\n    /* \r\n    * @returns LP Unstake\r\n    */\r\n    const unstakeLP = async () => {\r\n        const encodedABI = LPStakingContract.methods.exit().encodeABI();\r\n        await sendTransaction(ethereum, account, LPStakingContractAddress, encodedABI, '0x0',\r\n            (err: any) => { // onError\r\n                if (err.code === 4001) {\r\n                    toast('Cancelled unstaking for LP', toastOptionsError)\r\n                } else {\r\n                    toast(err.message, toastOptionsError)\r\n                }\r\n            },\r\n            () => { // onSuccess\r\n                toast('Unstaking succeeded for LP', toastOptionsSuccess)\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className='farms-content-wrap'>\r\n            <div className='farms-content'>\r\n                <div className='card-wrap'>\r\n                    <div className='card-title'>NFT Staking</div>\r\n                    <div className='card-content'>\r\n                        <div className='card-content-row'>\r\n                            <img src={LudusGenesis001} alt=\"LudusGenesis001\" />\r\n                            <div className='card-content-row-title'>Ludus Genesis 001</div>\r\n                            <div className={`input-selection ${!account ? 'disabled' : ''}`}>\r\n                                <CustomButton className='nbdr-btn input-selection-icon left' onClick={() => (ludusGenesis001 === 0 || !account) ? null : setLudusGenesis001(ludusGenesis001 - 1)}><FontAwesomeIcon icon={icons.minus} /></CustomButton>\r\n                                <div className='input-selection-number'>{ludusGenesis001}</div>\r\n                                <CustomButton className='nbdr-btn input-selection-icon right' onClick={() => (!account) ? null : setLudusGenesis001(ludusGenesis001 + 1)}><FontAwesomeIcon icon={icons.plus} /></CustomButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='card-content-row'>\r\n                            <img src={LudusGenesis002} alt=\"LudusGenesis002\" />\r\n                            <div className='card-content-row-title'>Ludus Genesis 002</div>\r\n                            <div className={`input-selection ${!account ? 'disabled' : ''}`}>\r\n                                <CustomButton className='nbdr-btn input-selection-icon left' onClick={() => (ludusGenesis002 === 0 || !account) ? null : setLudusGenesis002(ludusGenesis002 - 1)}><FontAwesomeIcon icon={icons.minus} /></CustomButton>\r\n                                <div className='input-selection-number'>{ludusGenesis002}</div>\r\n                                <CustomButton className='nbdr-btn input-selection-icon right' onClick={() => (!account) ? null : setLudusGenesis002(ludusGenesis002 + 1)}><FontAwesomeIcon icon={icons.plus} /></CustomButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='card-content-row'>\r\n                            <img src={LudusGenesis003} alt=\"LudusGenesis003\" />\r\n                            <div className='card-content-row-title'>Ludus Genesis 003</div>\r\n                            <div className={`input-selection ${!account ? 'disabled' : ''}`}>\r\n                                <CustomButton className='nbdr-btn input-selection-icon left' onClick={() => (ludusGenesis003 === 0 || !account) ? null : setLudusGenesis003(ludusGenesis003 - 1)}><FontAwesomeIcon icon={icons.minus} /></CustomButton>\r\n                                <div className='input-selection-number'>{ludusGenesis003}</div>\r\n                                <CustomButton className='nbdr-btn input-selection-icon right' onClick={() => (!account) ? null : setLudusGenesis003(ludusGenesis003 + 1)}><FontAwesomeIcon icon={icons.plus} /></CustomButton>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card-content-btm'>\r\n                        <CustomButton className='button' disabled={!account} onClick={approveNFTStaking}>Approve</CustomButton>\r\n                        <CustomButton className='b-btn main' disabled={(!account) || (ludusGenesis001 <= 0) && (ludusGenesis002 <= 0) && (ludusGenesis003 <= 0)} onClick={stakeNFT}>Stake</CustomButton>\r\n                        <CustomButton className='b-btn main' disabled={!account} onClick={claimNFT}>Claim</CustomButton>\r\n                        <CustomButton className='b-btn main' disabled={!account} onClick={unstakeNFT}>Unstake</CustomButton>\r\n                    </div>\r\n                </div>\r\n                <div className='card-wrap-column'>\r\n                    <div className='card-wrap'>\r\n                        <div className='card-title'>Single asset staking</div>\r\n                        <div className='card-content'>\r\n                            <div className='card-content-text'>Your Ludus balans</div>\r\n                            <div className='card-content-number'>{ludusBalance}</div>\r\n                        </div>\r\n                        <div className='card-content-btm'>\r\n                            <CustomButton className='button' disabled={!account} onClick={approveSingleAsset}>Approve</CustomButton>\r\n                            <CustomButton className='b-btn main' disabled={!account} onClick={stakeSingleAsset}>Stake</CustomButton>\r\n                            <CustomButton className='b-btn main' disabled={!account}>Claim</CustomButton>\r\n                            <CustomButton className='b-btn main' disabled={!account}>Unstake</CustomButton>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card-wrap'>\r\n                        <div className='card-title'>LP Staking</div>\r\n                        <div className='card-content'>\r\n                            <div className='card-content-text'>Your LP Balans</div>\r\n                            <div className='card-content-number'>{lpBalance}</div>\r\n                        </div>\r\n                        <div className='card-content-btm'>\r\n                            <CustomButton className='button' disabled={!account} onClick={approveLPStaking}>Approve</CustomButton>\r\n                            <CustomButton className='b-btn main' disabled={!account} onClick={stakeLP}>Stake</CustomButton>\r\n                            <CustomButton className='b-btn main' disabled={!account} onClick={claimLP}>Claim</CustomButton>\r\n                            <CustomButton className='b-btn main' disabled={!account} onClick={unstakeLP}>Unstake</CustomButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StakingContent\r\n"]},"metadata":{},"sourceType":"module"}