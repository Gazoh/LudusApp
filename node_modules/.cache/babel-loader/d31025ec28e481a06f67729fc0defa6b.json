{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\LudusApp\\\\src\\\\views\\\\Farms\\\\components\\\\FarmCards.tsx\";\nimport BigNumber from 'bignumber.js';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useWallet } from 'use-wallet';\nimport useAllStakedValue from '../../../hooks/useAllStakedValue';\nimport useFarms from '../../../hooks/useFarms';\nimport useVBTC from '../../../hooks/useVBTC';\nimport { getEarned, getMasterChefContract } from '../../../vbtc/utils';\nimport { bnToDec } from '../../../utils';\nimport StrudelImg from '../../../assets/img/Strudel-logo-Icon.png';\nimport BTCImg from '../../../assets/img/Strudel-Bitcoin-Icon.png';\n\nconst FarmCards = () => {\n  const [farms] = useFarms();\n  const {\n    account\n  } = useWallet();\n  const stakedValue = useAllStakedValue();\n  const strudelIndex = farms.findIndex(({\n    tokenSymbol\n  }) => tokenSymbol === 'STRDL');\n  const strudelPrice = strudelIndex >= 0 && stakedValue[strudelIndex] ? stakedValue[strudelIndex].tokenPriceInWeth : new BigNumber(0); //console.log(strudelPrice.toString())\n\n  const BLOCKS_PER_YEAR = new BigNumber(2336000);\n  const STRUDEL_PER_BLOCK = new BigNumber(1);\n  const rows = farms.reduce((farmRows, farm, i) => {\n    const farmWithStakedValue = { ...farm,\n      ...stakedValue[i],\n      apy: stakedValue[i] ? strudelPrice.times(STRUDEL_PER_BLOCK).times(BLOCKS_PER_YEAR).times(stakedValue[i].poolWeight).times(stakedValue[i].multiplier).div(stakedValue[i].totalWethValue) : null,\n      percentage: stakedValue[i] ? Number(Number(stakedValue[i].poolWeight) * Number(100)).toFixed(2).toString() : null\n    };\n    const newFarmRows = [...farmRows];\n\n    if (i <= 1) {\n      newFarmRows[0].push(farmWithStakedValue);\n    } else {\n      newFarmRows[1].push(farmWithStakedValue);\n    }\n\n    return newFarmRows;\n  }, [[], []]);\n  return /*#__PURE__*/React.createElement(StyledCards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, rows.map((farmRow, i) => /*#__PURE__*/React.createElement(StyledRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, farmRow.map((farm, j) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: j,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FarmCard, {\n    farm: farm,\n    index: i + j,\n    rowIndex: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nconst FarmCard = ({\n  farm,\n  index,\n  rowIndex\n}) => {\n  const [startTime, setStartTime] = useState(0);\n  const [harvestable, setHarvestable] = useState(0);\n  const {\n    account\n  } = useWallet();\n  const {\n    lpTokenAddress\n  } = farm;\n  const vbtc = useVBTC();\n\n  const renderer = countdownProps => {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = countdownProps;\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n    const paddedHours = hours < 10 ? `0${hours}` : hours;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, paddedHours, \":\", paddedMinutes, \":\", paddedSeconds);\n  };\n\n  useEffect(() => {\n    async function fetchEarned() {\n      if (vbtc) return;\n      const earned = await getEarned(getMasterChefContract(vbtc), lpTokenAddress, account);\n      setHarvestable(bnToDec(earned));\n    }\n\n    if (vbtc && account) {\n      fetchEarned();\n    }\n  }, [vbtc, lpTokenAddress, account, setHarvestable]);\n\n  const getSymbol = icon => {\n    switch (icon) {\n      case '1':\n        return StrudelImg;\n\n      case '2':\n        return BTCImg;\n\n      case '3':\n        return BTCImg;\n\n      default:\n        return icon;\n    }\n  };\n\n  const poolActive = true; // startTime * 1000 - Date.now() <= 0\n\n  return /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, \"ad\");\n};\n\nconst StyledCardAccent = styled.div`\n  background-size: 300% 300%;\n  border-radius: 12px;\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`;\nconst StyledCards = styled.div`\n  width: 1240px;\n  @media (max-width: 1240px) {\n    width: 100%;\n  }\n`;\nconst StyledLoadingWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`;\nconst StyledRow = styled.div`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing[4]}px;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  margin: 12px;\n  width: calc((900px - ${props => props.theme.spacing[4]}px * 2) / 3);\n  position: relative;\n`;\nconst StyledTitle = styled.h4`\n  color: ${props => props.theme.color.grey[600]};\n  font-size: 24px;\n  font-weight: 700;\n  margin: ${props => props.theme.spacing[2]}px 0 0;\n  padding: 0;\n`;\nconst StyledContent = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  background-size: 100%;\n`;\nconst StyledSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledDetails = styled.div`\n  margin-top: ${props => props.theme.spacing[2]}px;\n  text-align: center;\n`;\nconst StyledDetail = styled.div`\n  color: ${props => props.theme.color.grey[500]};\n`;\nconst StyledInsight = styled.div`\n  display: flex;\n  justify-content: space-between;\n  box-sizing: border-box;\n  border-radius: 8px;\n  background: #fffdfa;\n  color: #aa9584;\n  width: 100%;\n  margin-top: 12px;\n  line-height: 32px;\n  font-size: 13px;\n  border: 1px solid #e6dcd5;\n  text-align: center;\n  padding: 0 12px;\n`;\nconst StyledMoving = styled.div`\n  & > div {\n    height: 60px;\n  }\n`;\nexport default FarmCards;","map":{"version":3,"sources":["C:/xampp/htdocs/LudusApp/src/views/Farms/components/FarmCards.tsx"],"names":["BigNumber","React","useEffect","useState","styled","useWallet","useAllStakedValue","useFarms","useVBTC","getEarned","getMasterChefContract","bnToDec","StrudelImg","BTCImg","FarmCards","farms","account","stakedValue","strudelIndex","findIndex","tokenSymbol","strudelPrice","tokenPriceInWeth","BLOCKS_PER_YEAR","STRUDEL_PER_BLOCK","rows","reduce","farmRows","farm","i","farmWithStakedValue","apy","times","poolWeight","multiplier","div","totalWethValue","percentage","Number","toFixed","toString","newFarmRows","push","map","farmRow","j","FarmCard","index","rowIndex","startTime","setStartTime","harvestable","setHarvestable","lpTokenAddress","vbtc","renderer","countdownProps","hours","minutes","seconds","paddedSeconds","paddedMinutes","paddedHours","width","fetchEarned","earned","getSymbol","icon","poolActive","StyledCardAccent","StyledCards","StyledLoadingWrapper","StyledRow","props","theme","spacing","StyledCardWrapper","StyledTitle","h4","color","grey","StyledContent","StyledSpacer","StyledDetails","StyledDetail","StyledInsight","StyledMoving"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Countdown, { CountdownRenderProps } from 'react-countdown'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from 'use-wallet'\r\nimport Button from '../../../components/Button'\r\nimport Card from '../../../components/Card'\r\nimport CardContent from '../../../components/CardContent'\r\nimport CardIcon from '../../../components/CardIcon'\r\nimport Loader from '../../../components/Loader'\r\nimport Spacer from '../../../components/Spacer'\r\nimport { Farm } from '../../../contexts/Farms'\r\nimport useAllStakedValue, {\r\n  StakedValue,\r\n} from '../../../hooks/useAllStakedValue'\r\nimport useFarms from '../../../hooks/useFarms'\r\nimport useVBTC from '../../../hooks/useVBTC'\r\nimport { getEarned, getMasterChefContract } from '../../../vbtc/utils'\r\nimport { bnToDec } from '../../../utils'\r\nimport { StrudelMoving, VBTCSpin } from '../../../components/Lottie'\r\nimport StrudelImg from '../../../assets/img/Strudel-logo-Icon.png'\r\nimport BTCImg from '../../../assets/img/Strudel-Bitcoin-Icon.png'\r\n\r\ninterface FarmWithStakedValue extends Farm, StakedValue {\r\n  isBalancer?: boolean\r\n  url?: string\r\n  apy: BigNumber\r\n  percentage: string\r\n}\r\n\r\nconst FarmCards: React.FC = () => {\r\n  const [farms] = useFarms()\r\n  const { account } = useWallet()\r\n  const stakedValue = useAllStakedValue()\r\n\r\n  const strudelIndex = farms.findIndex(\r\n    ({ tokenSymbol }) => tokenSymbol === 'STRDL',\r\n  )\r\n\r\n  const strudelPrice =\r\n    strudelIndex >= 0 && stakedValue[strudelIndex]\r\n      ? stakedValue[strudelIndex].tokenPriceInWeth\r\n      : new BigNumber(0)\r\n  //console.log(strudelPrice.toString())\r\n  const BLOCKS_PER_YEAR = new BigNumber(2336000)\r\n  const STRUDEL_PER_BLOCK = new BigNumber(1)\r\n\r\n  const rows = farms.reduce<FarmWithStakedValue[][]>(\r\n    (farmRows, farm, i) => {\r\n      const farmWithStakedValue = {\r\n        ...farm,\r\n        ...stakedValue[i],\r\n        apy: stakedValue[i]\r\n          ? strudelPrice\r\n            .times(STRUDEL_PER_BLOCK)\r\n            .times(BLOCKS_PER_YEAR)\r\n            .times(stakedValue[i].poolWeight)\r\n            .times(stakedValue[i].multiplier)\r\n            .div(stakedValue[i].totalWethValue)\r\n          : null,\r\n        percentage: stakedValue[i]\r\n          ? Number(Number(stakedValue[i].poolWeight) * Number(100))\r\n            .toFixed(2)\r\n            .toString()\r\n          : null,\r\n      }\r\n      const newFarmRows = [...farmRows]\r\n      if (i <= 1) {\r\n        newFarmRows[0].push(farmWithStakedValue)\r\n      } else {\r\n        newFarmRows[1].push(farmWithStakedValue)\r\n      }\r\n      return newFarmRows\r\n    },\r\n    [[], []],\r\n  )\r\n\r\n  return (\r\n    <StyledCards>\r\n      {rows.map((farmRow: any, i: any) => \r\n        <StyledRow key={i}>\r\n          {farmRow.map((farm: any, j: any) => \r\n            <React.Fragment key={j}>\r\n              <FarmCard farm={farm} index={i + j} rowIndex={i} />\r\n            </React.Fragment>\r\n          )}\r\n        </StyledRow>\r\n      )}\r\n    </StyledCards>\r\n  )\r\n}\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  index: number\r\n  rowIndex: number\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, index, rowIndex }) => {\r\n  const [startTime, setStartTime] = useState(0)\r\n  const [harvestable, setHarvestable] = useState(0)\r\n\r\n  const { account } = useWallet()\r\n  const { lpTokenAddress } = farm\r\n  const vbtc = useVBTC()\r\n\r\n  const renderer = (countdownProps: CountdownRenderProps) => {\r\n    const { hours, minutes, seconds } = countdownProps\r\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\r\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\r\n    const paddedHours = hours < 10 ? `0${hours}` : hours\r\n    return (\r\n      <span style={{ width: '100%' }}>\r\n        {paddedHours}:{paddedMinutes}:{paddedSeconds}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchEarned() {\r\n      if (vbtc) return\r\n      const earned = await getEarned(\r\n        getMasterChefContract(vbtc),\r\n        lpTokenAddress,\r\n        account,\r\n      )\r\n      setHarvestable(bnToDec(earned))\r\n    }\r\n    if (vbtc && account) {\r\n      fetchEarned()\r\n    }\r\n  }, [vbtc, lpTokenAddress, account, setHarvestable])\r\n\r\n  const getSymbol = (icon: string): any => {\r\n    switch (icon) {\r\n      case '1':\r\n        return StrudelImg\r\n      case '2':\r\n        return BTCImg\r\n      case '3':\r\n        return BTCImg\r\n      default:\r\n        return icon\r\n    }\r\n  }\r\n\r\n  const poolActive = true // startTime * 1000 - Date.now() <= 0\r\n\r\n  return (\r\n    <StyledCardWrapper>\r\n     ad\r\n    </StyledCardWrapper>\r\n  )\r\n}\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background-size: 300% 300%;\r\n  border-radius: 12px;\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst StyledCards = styled.div`\r\n  width: 1240px;\r\n  @media (max-width: 1240px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst StyledLoadingWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledRow = styled.div`\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n  flex-flow: row wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst StyledCardWrapper = styled.div`\r\n  margin: 12px;\r\n  width: calc((900px - ${(props) => props.theme.spacing[4]}px * 2) / 3);\r\n  position: relative;\r\n`\r\n\r\nconst StyledTitle = styled.h4`\r\n  color: ${(props) => props.theme.color.grey[600]};\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  margin: ${(props) => props.theme.spacing[2]}px 0 0;\r\n  padding: 0;\r\n`\r\n\r\nconst StyledContent = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-size: 100%;\r\n`\r\n\r\nconst StyledSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledDetail = styled.div`\r\n  color: ${(props) => props.theme.color.grey[500]};\r\n`\r\n\r\nconst StyledInsight = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-sizing: border-box;\r\n  border-radius: 8px;\r\n  background: #fffdfa;\r\n  color: #aa9584;\r\n  width: 100%;\r\n  margin-top: 12px;\r\n  line-height: 32px;\r\n  font-size: 13px;\r\n  border: 1px solid #e6dcd5;\r\n  text-align: center;\r\n  padding: 0 12px;\r\n`\r\nconst StyledMoving = styled.div`\r\n  & > div {\r\n    height: 60px;\r\n  }\r\n`\r\n\r\nexport default FarmCards\r\n"]},"metadata":{},"sourceType":"module"}